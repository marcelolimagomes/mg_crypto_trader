# 1o - Update database 
python . -download-data -interval-list=1m,5m,15m,30m,1h -log-level=DEBUG -verbose

# 1o - Train all combinations variables
python . -batch-training -calc-rsi -normalize -no-tune -n-jobs=20 \
-symbol-list=BTCUSDT,ETHUSDT,BNBUSDT,XRPUSDT,ADAUSDT,DOGEUSDT,SOLUSDT,TRXUSDT,DOTUSDT,MATICUSDT,LTCUSDT,WBTCUSDT,BCHUSDT,AVAXUSDT,XLMUSDT,LINKUSDT,XMRUSDT,UNIUSDT,ATOMUSDT \
-interval-list=1m -estimator-list=knn -stop-loss-list=1.0 \
-numeric-features=volume,quote_asset_volume,number_of_trades,taker_buy_base_asset_volume,taker_buy_quote_asset_volume \
-regression-PnL-list=30,60,120 -regression-times-list=0  -start-train-date=2023-08-01 -start-test-date=2023-09-10

#open,high,low,close,volume,quote_asset_volume,number_of_trades,taker_buy_base_asset_volume,taker_buy_quote_asset_volume

python . -batch-training -calc-rsi -normalize -no-tune -n-jobs=20 -symbol-list=ETHUSDT,BNBUSDT,XRPUSDT -interval-list=1m -estimator-list=knn -stop-loss-list=1.0 -numeric-features=volume,quote_asset_volume,number_of_trades,taker_buy_base_asset_volume,taker_buy_quote_asset_volume -regression-PnL-list=30,60 -regression-times-list=0  -start-train-date=2023-07-01 -start-test-date=2023-09-01

# 2o Prepare Best Params based on results of step 1
python . -prepare-best-parameters

# 3o Train Best Models 
python . -batch-training -train-best-model -update-data-from-web

# 4o Run Bots
python . -run-bot -start-date=2023-06-01 -log-level=DEBUG -verbose

python . -batch-training -calc-rsi -normalize -no-tune -update-data-from-web -n-jobs=20 -symbol-list=BTCUSDT -interval-list=1m -estimator-list=knn -stop-loss-list=1.5,2.0 -numeric-features=quote_asset_volume,number_of_trades,taker_buy_base_asset_volume,taker_buy_quote_asset_volume -regression-PnL-list=30,60,120 -regression-times-list=0  -start-train-date=2023-01-01 -start-test-date=2023-09-01